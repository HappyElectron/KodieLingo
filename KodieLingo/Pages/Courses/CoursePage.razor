@using Model;
@using Data;
@using Services;
@using Microsoft.EntityFrameworkCore;
@inject ClientStateService ClientState;
@inject IDbContextFactory<DatabaseContext> DatabaseFactory;

@page "/course/{CourseName?}"


@if (ClientState.User != null && Course != null)
{
    <h1>This is the @CourseName page</h1>

    @foreach(Section section in Sections)
    {
        <SectionElement Section="section"/>
    }
}
else if(Course == null)
{
    <h1>
        @CourseName
        This ain't a course in thees parts, padn'er. Maybe try deawn in tallehase', they maight take yer sort.
    </h1>
}


@code {
    [Parameter]
    public string? CourseName { get; set; }

    private DatabaseContext? db { get; set; }

    // IDK, man
    private Course? Course;

    private ICollection<Section>? Sections => Course == null ? null : Course.Section;

    protected async override Task OnInitializedAsync()
    {
        db ??= DatabaseFactory.CreateDbContext();
    }

    protected async override Task OnParametersSetAsync()
    {
        // URL encoding is being fickle, because of the "#".
        // A better solution would take a while, so we're doing a 
        // manual override for evey non-alphanumeric course name, 
        // across both course-related pages.
        if (CourseName != null && CourseName.ToLower() == "c")
        {
            CourseName = "c#";
        }

        Course = db.Courses.Include(x => x.Section)
                                        .Include(x => x.Tag)
                                        .Include(x => x.Prerequisite)
            .FirstOrDefault(x => x.Name.ToLower() == CourseName.ToLower());
    }
}