@using Model;
@using Data;
@using Services;
@using Microsoft.EntityFrameworkCore;
@inject ClientStateService ClientState;
@inject IDbContextFactory<DatabaseContext> DatabaseFactory;
@page "/courses"

<h3>Courses</h3>

@if (ClientState.User != null)
{
    <SearchBar/>

    <h2>
        Current Courses:
    </h2>

    if(ClientState.User.Course.Count == 0)
    {
        <h3>No Courses! Add some, muppet.</h3>
    }

    @foreach (Course c in ClientState.User.Course)
    {
        <div name="Course" style="border: solid; border-radius:20px ;padding:20px;">
            <div name="Name" style="border: solid; border-radius:20px;">
                <h2 style="padding:10px;">Course: @c.Name</h2>
            </div>
            <div name="left" style="float: left; padding:10px;">
                <button><h3>Guidebook</h3></button>
                <button><h3>Continue</h3></button>
            </div>
            <div name="right" style="float: right; padding: 10px;">
                <button><h3>View full course</h3></button>
                <button><h3>View all courses</h3></button>
            </div>
        </div>
    }

    <h2><br/>All Courses:</h2>
    @foreach (Course c in Db.Courses)
    {
        <CourseSelectElement Course="c"/>
    }
}
@code {
    private DatabaseContext? Db { get; set; }
    public string SearchText = "";


    protected async override Task OnInitializedAsync()
    {
        Db ??= DatabaseFactory.CreateDbContext();
    }
    private async Task AddCourse1()
    {        
        ClientState.User.Course.Add(Db.Courses.First());
        await Db.SaveChangesAsync();
    }
}