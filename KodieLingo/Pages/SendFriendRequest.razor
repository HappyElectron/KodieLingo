@using Model;
@using Services
@using Data;
@using Microsoft.EntityFrameworkCore;

@inject ClientStateService ClientState
@inject IDbContextFactory<DatabaseContext> ContextFactory;

<h4 style="color:white; align-content:center;">@User.Username</h4>
<button style="width: 100%;" @onclick="AddFriend">Send friend request</button>

@code {
	[Parameter]
	public User User { get; set; }


	private DatabaseContext? db { get; set; }

	protected override async Task OnInitializedAsync()
	{
		db ??= await ContextFactory.CreateDbContextAsync();
	}

	private async Task AddFriend()
	{
		// This gives an error about unique keys in the friends column. Fix.
		User = db.Users.Include(b => b.FriendReqIncoming).
		First(b => b.Username == User.Username);

		User.FriendReqIncoming.Add(ClientState.User);

		ClientState.GetUser(ClientState.User.Email)
		.FriendReqOutgoing
		.Add(User);

		await db.SaveChangesAsync();
		StateHasChanged();
	}
}
